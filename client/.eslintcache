[{"D:\\YESQ_12_12_2020\\client\\src\\index.js":"1","D:\\YESQ_12_12_2020\\client\\src\\reportWebVitals.js":"2","D:\\YESQ_12_12_2020\\client\\src\\App.js":"3","D:\\YESQ_12_12_2020\\client\\src\\Components\\home.js":"4","D:\\YESQ_12_12_2020\\client\\src\\Components\\register.js":"5","D:\\YESQ_12_12_2020\\client\\src\\Components\\login.js":"6","D:\\YESQ_12_12_2020\\client\\src\\Components\\verification.js":"7","D:\\YESQ_12_12_2020\\client\\src\\Components\\forgot_password.js":"8","D:\\YESQ_12_12_2020\\client\\src\\Components\\resetpwd.js":"9","D:\\YESQ_12_12_2020\\client\\src\\Components\\userexist.js":"10","D:\\YESQ_12_12_2020\\client\\src\\Components\\Institute\\regstep1.js":"11","D:\\YESQ_12_12_2020\\client\\src\\Components\\404.js":"12","D:\\YESQ_12_12_2020\\client\\src\\Components\\reg_verification.js":"13","D:\\YESQ_12_12_2020\\client\\src\\Components\\Institute\\regstep3.js":"14","D:\\YESQ_12_12_2020\\client\\src\\Components\\Institute\\regstep2.js":"15","D:\\YESQ_12_12_2020\\client\\src\\Components\\Institute\\instverification.js":"16"},{"size":538,"mtime":1607746723771,"results":"17","hashOfConfig":"18"},{"size":375,"mtime":1607746723771,"results":"19","hashOfConfig":"18"},{"size":2016,"mtime":1607772241630,"results":"20","hashOfConfig":"18"},{"size":130,"mtime":1607746723769,"results":"21","hashOfConfig":"18"},{"size":5949,"mtime":1607746723770,"results":"22","hashOfConfig":"18"},{"size":5796,"mtime":1607746723769,"results":"23","hashOfConfig":"18"},{"size":5035,"mtime":1607746723771,"results":"24","hashOfConfig":"18"},{"size":4063,"mtime":1607746723769,"results":"25","hashOfConfig":"18"},{"size":4744,"mtime":1607746723770,"results":"26","hashOfConfig":"18"},{"size":2333,"mtime":1607746723770,"results":"27","hashOfConfig":"18"},{"size":9967,"mtime":1608192968558,"results":"28","hashOfConfig":"18"},{"size":1747,"mtime":1607746723767,"results":"29","hashOfConfig":"18"},{"size":6438,"mtime":1607746723770,"results":"30","hashOfConfig":"18"},{"size":7006,"mtime":1608017438055,"results":"31","hashOfConfig":"18"},{"size":11445,"mtime":1607777399326,"results":"32","hashOfConfig":"18"},{"size":3874,"mtime":1607746723767,"results":"33","hashOfConfig":"18"},{"filePath":"34","messages":"35","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},"gk7ajo",{"filePath":"37","messages":"38","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"39","messages":"40","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"41","messages":"42","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"43","messages":"44","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"45","messages":"46","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"47","usedDeprecatedRules":"36"},{"filePath":"48","messages":"49","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"50","usedDeprecatedRules":"36"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"57","messages":"58","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"59","messages":"60","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"61","usedDeprecatedRules":"36"},{"filePath":"62","messages":"63","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"64","messages":"65","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"66","messages":"67","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":1,"source":"68","usedDeprecatedRules":"36"},{"filePath":"69","messages":"70","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},"D:\\YESQ_12_12_2020\\client\\src\\index.js",[],["71","72"],"D:\\YESQ_12_12_2020\\client\\src\\reportWebVitals.js",[],"D:\\YESQ_12_12_2020\\client\\src\\App.js",[],"D:\\YESQ_12_12_2020\\client\\src\\Components\\home.js",[],"D:\\YESQ_12_12_2020\\client\\src\\Components\\register.js",[],"D:\\YESQ_12_12_2020\\client\\src\\Components\\login.js",["73","74","75"],"import React, { useState } from 'react'\r\nimport '../Css/login.css'\r\nimport Landing from '../Images/landing.svg'\r\nimport { useFormik } from 'formik'\r\nimport * as Yup from 'yup'\r\nimport axios from 'axios'\r\nimport { Link } from 'react-router-dom'\r\nimport { useHistory } from 'react-router-dom'\r\nexport default function Login() {\r\n    const [error, setError] = useState(null)\r\n    const errordiv = error ? <div className=\"login-errormsg\">{error}</div> : '';\r\n    const history = useHistory();\r\n    const phoneRegex = RegExp(\r\n        /^\\(?([0-9]{3})\\)?[-. ]?([0-9]{3})[-. ]?([0-9]{4})$/\r\n    );\r\n    const formik = useFormik\r\n        ({\r\n            initialValues:\r\n            {\r\n                mobile: \"\",\r\n                password: \"\"\r\n\r\n            },\r\n            validationSchema: Yup.object\r\n                ({\r\n                    mobile: Yup.string()\r\n                        .matches(phoneRegex, \"Incorrect mobile number\")\r\n                        \r\n                        .required(\"Enter your mobile number\"),\r\n                    password: Yup.string()\r\n\r\n                        .required(\"Enter your password!\")\r\n\r\n\r\n                }),\r\n            onSubmit: (values, onSubmitprops) => {\r\n                setError(null)\r\n                let mobTrim = values.mobile.trim()\r\n                let pswdTrim = values.password.trim()\r\n                const trimValues = { mobile: mobTrim, password: pswdTrim }\r\n\r\n                axios.post(\"/signin\", trimValues).then(response => {\r\n                    console.log(response)\r\n\r\n                    onSubmitprops.resetForm()\r\n                    history.push\r\n                        ({\r\n                            pathname: '/home',\r\n                            state: { detail: { mobile: response.data, password: response.config.url } }\r\n\r\n\r\n\r\n                        });\r\n                })\r\n                    .catch((err) => {\r\n                        setError(err.response.data);\r\n\r\n                    })\r\n            }\r\n        });\r\n    return (\r\n        <div className='white'>\r\n            <div className=\"container\">\r\n                <div className=\"row d-flex align-items-center vh-100\">\r\n                    <div className=\"col-md-6 card-new\">\r\n                        <div className=\"card1 pb-5\">\r\n                            <div className=\"row px-3  mt-4 mb-5 border-line\">\r\n                                <img src={Landing} alt='logo' />\r\n                            </div>\r\n                        </div>\r\n\r\n                    </div>\r\n                    <div className=\"col-md-5 m-auto\">\r\n                        <div id=\"login\">\r\n                            <aside>\r\n                                <div className=\"text-center\">\r\n                                    <h3>SIGN IN</h3>\r\n                                    {errordiv}\r\n                                </div>\r\n\r\n                                <form className=\"signInForm\" onSubmit={formik.handleSubmit} autoComplete=\"off\">\r\n                                    <div className=\"form-group\">\r\n                                        <label htmlFor=\"\" className=\"input-label\">Mobile Number</label>\r\n                                        <input\r\n                                            type=\"text\"\r\n                                            className=\"form-control signInMobile\"\r\n                                            name=\"mobile\"\r\n                                            id=\"mobile\"\r\n                                            value={formik.values.mobile}\r\n                                            onChange={formik.handleChange}\r\n\t\t\t\t\t\t\t\t\t\t\tonKeyDown={e => /[\\+\\-\\.\\,]$/.test(e.key) && e.preventDefault()}\r\n                                            onBlur={formik.handleBlur} /> {formik.touched.mobile && formik.errors.mobile && (<div className=\"errorMessage\">{formik.errors.mobile}</div>)}\r\n\r\n                                    </div>\r\n                                    <div className=\"form-group\">\r\n                                        <label htmlFor=\"\" className=\"input-label\">Password</label>\r\n                                        <input\r\n                                            type=\"password\"\r\n                                            className=\"form-control signInPassword\"\r\n                                            name=\"password\"\r\n                                            id=\"password\"\r\n                                            value={formik.values.password}\r\n                                            onChange={formik.handleChange}\r\n                                            onBlur={formik.handleBlur} />\r\n                                        {formik.touched.password && formik.errors.password && (<div className=\"errorMessage\">{formik.errors.password}</div>)}\r\n\r\n                                    </div>\r\n                                    <div className=\"clearfix add_bottom_10\">\r\n                                        <div className=\"float-right mt-1\">\r\n                                            <p><Link to='/Forgot' className='forgotpswd-link'>Forgot password?</Link></p>\r\n                                        </div>\r\n                                    </div>\r\n                                    <button type=\"submit\" className=\"btn_1 rounded full-width\">SIGN IN</button>\r\n                                    <div className=\"text-center add_top_10\">\r\n                                        <p>You don't have an account?<span className='signup-link'><Link className='signup-link-clr' to='/'>Sign up!</Link></span> </p>\r\n                                    </div>\r\n                                </form>\r\n                            </aside>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n","D:\\YESQ_12_12_2020\\client\\src\\Components\\verification.js",["76"],"import React, { useState } from 'react';\r\nimport OtpInput from 'react-otp-input';\r\nimport '../Css/verification.css'\r\nimport Landing from '../Images/landing.svg'\r\nimport axios from 'axios'\r\nimport { useLocation } from \"react-router-dom\";\r\nimport { useEffect } from \"react\";\r\nimport { useHistory } from 'react-router-dom'\r\n\r\nexport default function App() {\r\n    const [error, setError] = useState(null)\r\n    const errordiv = error ? <div className=\"login-errormsg\">{error}</div> : '';\r\n    const [otp, setOtp] = useState('')\r\n    const location = useLocation();\r\n    const History = useHistory()\r\n    const resendInput =\r\n    {\r\n        mobile: location.state.mobile\r\n    }\r\n    const mobileToString = location.state.mobile.toString()\r\n    useEffect(() => {\r\n\r\n    }, [location]);\r\n\r\n\r\n    const handleChange = otp => {\r\n        setOtp(otp)\r\n    }\r\n\r\n    const handleSubmit = (event) => {\r\n        event.preventDefault()\r\n        const value = otp\r\n        const valueLength = value.length\r\n        if (valueLength === 6) {\r\n            const inputs =\r\n            {\r\n                code: value,\r\n                uid: location.state.uid,\r\n                sendTo: location.state.mobile\r\n            }\r\n            setOtp('')\r\n            axios.post(\"/verification\", inputs).then(response => {\r\n\r\n                History.push\r\n                    ({\r\n                        pathname: '/resetpassword',\r\n                        state:\r\n                        {\r\n                            uid: response.data.uid\r\n                        }\r\n                    })\r\n\r\n\r\n            }).catch((err) => {\r\n                setError(err.response.data);\r\n            })\r\n        }\r\n        else {\r\n            console.log(\"enter valid otp\")\r\n            setError('Enter valid OTP')\r\n        }\r\n\r\n    }\r\n    const resendOtp = () => {\r\n        axios.post(\"/send_otp\", resendInput).then(response => {\r\n            History.push\r\n                ({\r\n                    pathname: '/verification',\r\n                    state:\r\n                    {\r\n                        mobile: response.data.mobile,\r\n                        uid: response.data.uid\r\n                    }\r\n                })\r\n        }).catch((err) => {\r\n            setError(err.response.data);\r\n        })\r\n\r\n    }\r\n\r\n\r\n\r\n\r\n\r\n    return (\r\n        <div className='white'>\r\n            <div className=\"container\">\r\n                <div className=\"row d-flex align-items-center vh-100\">\r\n                    <div className=\"col-md-6 card-new\">\r\n                        <div className=\"card1 pb-5\">\r\n                            <div className=\"row px-3  mt-4 mb-5 border-line\">\r\n                                <img src={Landing} alt='logo' />\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"col-md-5 m-auto\">\r\n                        <div id=\"login\" className=\"mar-btom-0\">\r\n                            <aside>\r\n                                <div className=\"text-center\">\r\n                                    <h3>Verification</h3>\r\n                                </div>\r\n                                <div className=\"text-center add_top_10 font-12 verifictn-subhead\">Please Enter the verification code<br />\r\n                                                send to {'...' + mobileToString.slice(-4)}\r\n                                    {error ? <div className=\"login-errormsg\">{error}</div> : ''}\r\n                                </div>\r\n                                <form onSubmit={handleSubmit}>\r\n                                    <div className=\"form-group\">\r\n                                        <div className=\"code_group\">\r\n                                            <div className=\"row code-box-marg\"></div>\r\n                                            <OtpInput\r\n\r\n                                                value={otp}\r\n                                                onChange={handleChange}\r\n                                                numInputs={6}\r\n                                                separator={<span></span>}\r\n                                                isInputNum=\"true\"\r\n                                                inputStyle=\"code-box\"\r\n                                                containerStyle=\"otp-box\"\r\n                                            />\r\n\r\n\r\n                                        </div>\r\n                                    </div>\r\n                                    <button type=\"submit\" class=\"btn_1 rounded full-width\" >CONTINUE</button>\r\n                                    <div class=\"text-center add_top_10\">\r\n\r\n                                    </div>\r\n\r\n                                </form>\r\n                                <button type='submit' className='resend-btn' onClick={resendOtp}> Resend verification code?</button>\r\n                            </aside>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n\r\n}\r\n","D:\\YESQ_12_12_2020\\client\\src\\Components\\forgot_password.js",[],"D:\\YESQ_12_12_2020\\client\\src\\Components\\resetpwd.js",[],"D:\\YESQ_12_12_2020\\client\\src\\Components\\userexist.js",[],"D:\\YESQ_12_12_2020\\client\\src\\Components\\Institute\\regstep1.js",["77"],"D:\\YESQ_12_12_2020\\client\\src\\Components\\404.js",["78"],"import React from 'react'\r\nimport { Link } from 'react-router-dom'\r\nimport '../Css/userexist.css'\r\nimport Landing from '../Images/landing.svg'\r\n\r\n\r\nexport default function Notfound() {\r\n    const style = {marginBottom : '0px'}\r\n    return (\r\n        <div className='white'>\r\n            <div className=\"container\">\r\n\t\t        <div className=\"row d-flex align-items-center vh-100\">\r\n                    <div className=\"col-md-6 card-new\">\r\n                        <div className=\"card1 pb-5\">\r\n                            <div className=\"row px-3  mt-4 mb-5 border-line\"> \r\n                                <img src={Landing}  alt='logo'/>\r\n                            </div>\r\n                        </div>\r\n\r\n                    </div>\r\n\t\t\t        <div className=\"col-md-5 m-auto\">\r\n\t\t\t\t        <div id=\"login\">\r\n\t\t\t\t\t        <aside>\r\n                                <div className=\"notfound-caption\">\r\n                                <h2><span className=\"notfound-caption\">404</span><br/>\r\n                               <span className=\"sorry-caption\">Sorry!</span></h2>\r\n                                </div>\r\n                                <div className=\"notfound-subcaption\">\r\n                                <p>The page you're looking for not found</p>\r\n                                </div>\r\n                                <di className=\"footer-gohome\">\r\n                                    <p><Link className='link-color' to='/'>Go to Home <span className=\"arrow\">{'>>'}</span></Link></p>\r\n                                </di>\r\n                                \r\n\r\n                            </aside>\r\n                       </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n\r\n    )\r\n}\r\n","D:\\YESQ_12_12_2020\\client\\src\\Components\\reg_verification.js",[],"D:\\YESQ_12_12_2020\\client\\src\\Components\\Institute\\regstep3.js",[],"D:\\YESQ_12_12_2020\\client\\src\\Components\\Institute\\regstep2.js",["79"],"import React from 'react'\r\nimport '../InstituteCss/regstep1.css'\r\nimport { useFormik } from 'formik'\r\nimport * as Yup from 'yup'\r\nimport { useHistory } from 'react-router-dom'\r\nimport { useLocation } from \"react-router-dom\";\r\nimport { useEffect } from \"react\";\r\n\r\nexport default function Regstep2() {\r\n    const History = useHistory()\r\n    const location = useLocation()\r\n   useEffect(() => {\r\n                \r\n            }, [location]);\r\n    const formik = useFormik\r\n        ({\r\n            initialValues:\r\n            {\r\n                roomno: \"\",\r\n                building: \"\",\r\n                street: \"\",\r\n                city: \"\",\r\n                area: \"\",\r\n                pincode: \"\",\r\n                designation: \"\",\r\n                district: \"\",\r\n                state: \"\",\r\n                country: \"\",\r\n                landmark: \"\"\r\n            },\r\n            validationSchema: Yup.object\r\n                ({  \r\n                    roomno: Yup.string()\r\n                       .required(\"Enter your room number\"),\r\n                    building: Yup.string()\r\n                        .required(\"Enter your building\"),    \r\n                    street: Yup.string()\r\n                        \r\n                        .required(\"Enter your street\"),\r\n                    landmark: Yup.string()\r\n                        \r\n                        .required(\"Enter your landmark\"),\r\n                    area: Yup.string()\r\n                       .required(\"Enter your area\"),\r\n                      \r\n                     city: Yup.string()\r\n                        .required(\"Enter your city\"),\r\n                    pincode: Yup.string()\r\n                        .required(\"Enter pincode\"),\r\n                    district: Yup.string()\r\n                        .required(\"Enter your district\"),\r\n                    state: Yup.string()\r\n                        .required(\"Enter your state\"),\r\n                    country: Yup.string()\r\n                        .required(\"Enter your country\"),\r\n                }),\r\n            onSubmit: (values,onSubmitprops) => {\r\n                let roomnoTrim = values.roomno.trim()\r\n                let buildingTrim = values.building.trim()\r\n                let streetTrim = values.street.trim()\r\n                let landmarkTrim = values.landmark.trim()\r\n                let areaTrim = values.area.trim()\r\n                let cityTrim = values.city.trim()\r\n                let districtTrim = values.district.trim()\r\n                let stateTrim = values. state.trim()\r\n                let pincode= values.pincode\r\n                let countryTrim = values.country.trim()\r\n                const trimValues = { roomno: roomnoTrim,building:buildingTrim,street:streetTrim,landmark:landmarkTrim,\r\n                                    area: areaTrim,city:cityTrim,pincode:pincode,\r\n                                    district:districtTrim, state:stateTrim,country:countryTrim}\r\n                                    console.log(trimValues)\r\n                     \r\n                    onSubmitprops.resetForm()\r\n                     History.push\r\n                         ({\r\n                            pathname: '/institute/registration3',\r\n                             state: {\r\n                                 values: location.state.values,\r\n                                 values2: trimValues\r\n                              }\r\n                         });\r\n            }\r\n        });\r\n    return (\r\n        <div className=\"container\">\r\n            <div className=\" form-align \">\r\n                <form className=\"signInForm\"  autoComplete=\"off\" onSubmit={formik.handleSubmit}> \r\n                    <div className=\"row  form-pad\">\r\n                        <div className=\"col-md-6\">\r\n                            <div className=\"form-group\">\r\n                                <label htmlFor=\"\" className=\"input-label\">Room No</label>\r\n                                <input\r\n                                    type=\"text\"\r\n                                    className=\"form-control signInMobile\"\r\n                                    name=\"roomno\"\r\n                                    id=\"institute_name\"\r\n                                    {...formik.getFieldProps('roomno')}\r\n                                />\r\n                                {formik.touched.roomno && formik.errors.roomno && (<div className=\"errorMessage\">{formik.errors.roomno}</div>)}\r\n\r\n                            </div>\r\n                           \r\n                            <div className=\"form-group\">\r\n                                <label htmlFor=\"\" className=\"input-label\">Building</label>\r\n                                <input\r\n                                    type=\"text\"\r\n                                    className=\"form-control signInPassword\"\r\n                                    name=\"building\"\r\n                                    id=\"building\"\r\n                                    {...formik.getFieldProps('building')}\r\n                                />\r\n                                {formik.touched.building && formik.errors.building&& (<div className=\"errorMessage\">{formik.errors.building}</div>)}\r\n\r\n                            </div>\r\n                            <div className=\"form-group\">\r\n                                <label htmlFor=\"\" className=\"input-label\">Street</label>\r\n                                <input\r\n                                    type=\"text\"\r\n                                    className=\"form-control signInPassword\"\r\n                                    name=\"street\"\r\n                                    id=\"street\"\r\n                                    {...formik.getFieldProps('street')}\r\n                                />\r\n                                {formik.touched.street && formik.errors.street && (<div className=\"errorMessage\">{formik.errors.street}</div>)}\r\n\r\n                            </div>\r\n                            <div className=\"form-group\">\r\n                                <label htmlFor=\"\" className=\"input-label\">Landmark</label>\r\n                                <input\r\n                                    type=\"text\"\r\n                                    className=\"form-control signInPassword\"\r\n                                    name=\"landmark\"\r\n                                    id=\"email\"\r\n                                    {...formik.getFieldProps('landmark')}\r\n                                />\r\n                                {formik.touched.landmark && formik.errors.landmark && (<div className=\"errorMessage\">{formik.errors.landmark}</div>)}\r\n                            </div>\r\n                            \r\n                            <div className=\"form-group\">\r\n                                <label htmlFor=\"\" className=\"input-label\">Area</label>\r\n                                <input\r\n                                    type=\"text\"\r\n                                    className=\"form-control signInPassword\"\r\n                                    name=\"area\"\r\n                                    id=\"area\"\r\n                                    {...formik.getFieldProps('area')}\r\n                                 />\r\n                                 {formik.touched.area && formik.errors.area&& (<div className=\"errorMessage\">{formik.errors.area}</div>)}\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"col-md-6\">\r\n                            <div className=\"form-group\">\r\n                                <label htmlFor=\"\" className=\"input-label\">City</label>\r\n                                <input\r\n                                     type=\"text\"\r\n                                     className=\"form-control signInPassword\"\r\n                                     name=\"city\"\r\n                                     id=\"contact_person\"\r\n                                     {...formik.getFieldProps('city')}\r\n                                />\r\n                                {formik.touched.city && formik.errors.city && (<div className=\"errorMessage\">{formik.errors.city}</div>)}\r\n\r\n                            </div>\r\n                            <div className=\"form-group\">\r\n                                <label htmlFor=\"\" className=\"input-label\">Pin Code</label>\r\n                                <input\r\n                                    type=\"number\"\r\n                                    className=\"form-control signInPassword\"\r\n                                    name=\"pincode\"\r\n                                    id=\"pincode\"\r\n                                    {...formik.getFieldProps('pincode')}\r\n                                />\r\n                                {formik.touched.pincode && formik.errors.pincode && (<div className=\"errorMessage\">{formik.errors.pincode}</div>)}\r\n\r\n                            </div>\r\n                            <div className=\"form-group\">\r\n                                <label htmlFor=\"\" className=\"input-label\">District</label>\r\n                                    <input\r\n                                        type=\"text\"\r\n                                        className=\"form-control signInPassword\"\r\n                                        name=\"district\"\r\n                                        id=\"district\"\r\n                                        {...formik.getFieldProps('district')}\r\n                                    />\r\n                                    {formik.touched.district && formik.errors.district && (<div className=\"errorMessage\">{formik.errors.district}</div>)}\r\n\r\n                            </div>\r\n                            <div className=\"form-group\">\r\n                                <label htmlFor=\"\" className=\"input-label\">State</label>\r\n                                <input\r\n                                    type=\"text\"\r\n                                    className=\"form-control signInPassword\"\r\n                                    name=\"state\"\r\n                                    id=\"state\"\r\n                                    {...formik.getFieldProps('state')}\r\n                                />\r\n                                {formik.touched.state && formik.errors.state && (<div className=\"errorMessage\">{formik.errors.state}</div>)}\r\n\r\n                            </div>\r\n                            <div className=\"form-group\">\r\n                                <label htmlFor=\"\" className=\"input-label\">Country</label>\r\n                                    <input\r\n                                        type=\"text\"\r\n                                        className=\"form-control signInPassword\"\r\n                                        name=\"country\"\r\n                                        id=\"country\"\r\n                                        {...formik.getFieldProps('country')}\r\n                                    />\r\n                                    {formik.touched.country && formik.errors.country && (<div className=\"errorMessage\">{formik.errors.country}</div>)}\r\n\r\n                            </div>\r\n                                    \r\n                        </div>\r\n                        <button type=\"submit\" className=\"btn_1 rounded full-width submit\">Continue</button>\r\n                                   \r\n                    </div>\r\n                                    \r\n                </form>\r\n            </div>\r\n        </div>\r\n\r\n           \r\n            \r\n            \r\n       \r\n    )\r\n}\r\n","D:\\YESQ_12_12_2020\\client\\src\\Components\\Institute\\instverification.js",[],{"ruleId":"80","replacedBy":"81"},{"ruleId":"82","replacedBy":"83"},{"ruleId":"84","severity":1,"message":"85","line":91,"column":30,"nodeType":"86","messageId":"87","endLine":91,"endColumn":31,"suggestions":"88"},{"ruleId":"84","severity":1,"message":"89","line":91,"column":34,"nodeType":"86","messageId":"87","endLine":91,"endColumn":35,"suggestions":"90"},{"ruleId":"84","severity":1,"message":"91","line":91,"column":36,"nodeType":"86","messageId":"87","endLine":91,"endColumn":37,"suggestions":"92"},{"ruleId":"93","severity":1,"message":"94","line":12,"column":11,"nodeType":"95","messageId":"96","endLine":12,"endColumn":19},{"ruleId":"93","severity":1,"message":"97","line":5,"column":8,"nodeType":"95","messageId":"96","endLine":5,"endColumn":13},{"ruleId":"93","severity":1,"message":"98","line":8,"column":11,"nodeType":"95","messageId":"96","endLine":8,"endColumn":16},{"ruleId":"99","severity":1,"message":"100","line":65,"column":33,"nodeType":"101","messageId":"102","endLine":65,"endColumn":46,"fix":"103"},"no-native-reassign",["104"],"no-negated-in-lhs",["105"],"no-useless-escape","Unnecessary escape character: \\+.","Literal","unnecessaryEscape",["106","107"],"Unnecessary escape character: \\..",["108","109"],"Unnecessary escape character: \\,.",["110","111"],"no-unused-vars","'errordiv' is assigned a value but never used.","Identifier","unusedVar","'axios' is defined but never used.","'style' is assigned a value but never used.","no-whitespace-before-property","Unexpected whitespace before property state.","MemberExpression","unexpectedWhitespace",{"range":"112","text":"113"},"no-global-assign","no-unsafe-negation",{"messageId":"114","fix":"115","desc":"116"},{"messageId":"117","fix":"118","desc":"119"},{"messageId":"114","fix":"120","desc":"116"},{"messageId":"117","fix":"121","desc":"119"},{"messageId":"114","fix":"122","desc":"116"},{"messageId":"117","fix":"123","desc":"119"},[2506,2508],".","removeEscape",{"range":"124","text":"125"},"Remove the `\\`. This maintains the current functionality.","escapeBackslash",{"range":"126","text":"127"},"Replace the `\\` with `\\\\` to include the actual backslash character.",{"range":"128","text":"125"},{"range":"129","text":"127"},{"range":"130","text":"125"},{"range":"131","text":"127"},[3621,3622],"",[3621,3621],"\\",[3625,3626],[3625,3625],[3627,3628],[3627,3627]]